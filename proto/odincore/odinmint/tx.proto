syntax = "proto3";
package odincore.odinmint;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "odincore/odinmint/params.proto";
import "odincore/odinmint/mint.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/ODIN-PROTOCOL/odin-core/x/odinmint/types";

// Msg defines the mint Msg service.
service Msg {
  // WithdrawCoinsToAccFromTreasury defines a method for withdrawing from mint
  // module.
  rpc WithdrawCoinsToAccFromTreasury(MsgWithdrawCoinsToAccFromTreasury)
      returns (MsgWithdrawCoinsToAccFromTreasuryResponse);
  // MintCoins defines a method for minting from mint module.
  rpc MintCoins(MsgMintCoins) returns (MsgMintCoinsResponse);
}

// MsgWithdrawCoinsToAccFromTreasury is a message for withdrawing from mint
// module.
message MsgWithdrawCoinsToAccFromTreasury {
  option (gogoproto.equal) = true;

  // Amount is the amoutn of coins to withdraw
  repeated cosmos.base.v1beta1.Coin amount = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  // Receiver is for whom withdraw coins
  string receiver = 2;
  // Sender is the message signer who submits this report transaction
  string sender = 3;
}

// MsgWithdrawCoinsToAccFromTreasuryResponse
message MsgWithdrawCoinsToAccFromTreasuryResponse {}

// MsgMintCoins is a message for minting from mint module.
message MsgMintCoins {
  option (gogoproto.equal) = true;

  // Amount is the amount of coins to mint
  repeated cosmos.base.v1beta1.Coin amount = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  // Sender is the message signer who submits this report transaction
  string sender = 2;
}

// MsgMintCoinsResponse
message MsgMintCoinsResponse {}