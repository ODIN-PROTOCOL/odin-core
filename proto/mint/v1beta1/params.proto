syntax = "proto3";
package mint.v1beta1;

option go_package = "github.com/ODIN-PROTOCOL/odin-core/x/mint/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "mint/v1beta1/mint.proto";

import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

// Params holds parameters for the mint module.
message Params {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  // type of coin to mint
  string mint_denom = 1;
  // maximum annual change in inflation rate
  string inflation_rate_change = 2 [
    (gogoproto.moretags)   = "yaml:\"inflation_rate_change\"",
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  // maximum inflation rate
  string inflation_max = 3 [
    (gogoproto.moretags)   = "yaml:\"inflation_max\"",
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  // minimum inflation rate
  string inflation_min = 4 [
    (gogoproto.moretags)   = "yaml:\"inflation_min\"",
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  // goal of percent bonded atoms
  string goal_bonded = 5 [
    (gogoproto.moretags)   = "yaml:\"goal_bonded\"",
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  // expected blocks per year
  uint64 blocks_per_year = 6 [(gogoproto.moretags) = "yaml:\"blocks_per_year\""];
  // max amount to withdraw per time
  repeated cosmos.base.v1beta1.Coin max_withdrawal_per_time = 7 [
    (gogoproto.moretags)     = "yaml:\"max_withdrawal_per_time\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable)     = false
  ];
  // flag if minting from air
  bool mint_air = 8 [(gogoproto.moretags) = "yaml:\"mint_air\""];
  // eligible to withdraw accounts
  repeated string eligible_accounts_pool = 9 [(gogoproto.moretags) = "yaml:\"eligible_accounts_pool\""];
  // max allowed mint volume
  repeated cosmos.base.v1beta1.Coin max_allowed_mint_volume = 10 [
    (gogoproto.moretags)     = "yaml:\"max_allowed_mint_volume\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable)     = false
  ];
  // allowed mint denoms
  repeated AllowedDenom allowed_mint_denoms = 11 [(gogoproto.moretags) = "yaml:\"allowed_mint_denoms\""];
  // allowed minter
  repeated string allowed_minter = 12 [(gogoproto.moretags) = "yaml:\"allowed_minter\""];
}
