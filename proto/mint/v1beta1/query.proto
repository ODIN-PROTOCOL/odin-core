syntax = "proto3";
package mint.v1beta1;

option go_package = "github.com/ODIN-PROTOCOL/odin-core/x/mint/types";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "mint/v1beta1/params.proto";

import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

// Query defines the gRPC querier service.
service Query {
  // Params returns the total set of minting parameters.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mint/params";
  }
  // Inflation returns current inflation.
  rpc Inflation(QueryInflationRequest) returns (QueryInflationResponse) {
    option (google.api.http).get = "/mint/parameters";
  }
  // Inflation returns current annual provisions.
  rpc AnnualProvisions(QueryAnnualProvisionsRequest) returns (QueryAnnualProvisionsResponse) {
    option (google.api.http).get = "/mint/annual_provisions";
  }
  // Inflation returns current treasury pool.
  rpc TreasuryPool(QueryTreasuryPoolRequest) returns (QueryTreasuryPoolResponse) {
    option (google.api.http).get = "/mint/treasury_pool";
  }
  // CurrentMintVolume returns current minted coins volume.
  rpc CurrentMintVolume(QueryCurrentMintVolumeRequest) returns (QueryCurrentMintVolumeResponse) {
    option (google.api.http).get = "/mint/current_mint_volume";
  }
}

// QueryParamsRequest is request type for the Query/QueryParams RPC
// method.
message QueryParamsRequest {}
// QueryParamsResponse is response type for the Query/QueryParams RPC
// method.
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryInflationRequest is request type for the Query/QueryInflation RPC
// method.
message QueryInflationRequest {}
// QueryInflationResponse is response type for the Query/QueryInflation RPC
// method.
message QueryInflationResponse {
  string inflation = 1 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryAnnualProvisionsRequest is request type for the
// Query/QueryAnnualProvisions RPC method.
message QueryAnnualProvisionsRequest {}
// QueryAnnualProvisionsResponse is response type for the
// Query/QueryAnnualProvisions RPC method.
message QueryAnnualProvisionsResponse {
  string annual_provisions = 1 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryTreasuryPoolRequest is request type for the Query/QueryTreasuryPool RPC
// method.
message QueryTreasuryPoolRequest {}
// QueryTreasuryPoolResponse is response type for the Query/QueryTreasuryPool
// RPC method.
message QueryTreasuryPoolResponse {
  repeated cosmos.base.v1beta1.Coin treasury_pool = 1
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

// QueryCurrentMintVolumeRequest is request type for the
// Query/QueryCurrentMintVolume RPC method.
message QueryCurrentMintVolumeRequest {}
// QueryCurrentMintVolumeResponse is response type for the
// Query/QueryCurrentMintVolume RPC method.
message QueryCurrentMintVolumeResponse {
  repeated cosmos.base.v1beta1.Coin current_mint_volume = 1
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}
