swagger: '2.0'
info:
  title: mint/query.proto
  version: version not set
consumes:
  - application/json
produces:
  - application/json
paths:
  /mint/annual_provisions:
    get:
      summary: Inflation returns current annual provisions.
      operationId: AnnualProvisions
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/mint.QueryAnnualProvisionsResponse'
        default:
          description: An unexpected error response
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      tags:
        - Query
  /mint/current_mint_volume:
    get:
      summary: CurrentMintVolume returns current minted coins volume.
      operationId: CurrentMintVolume
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/mint.QueryCurrentMintVolumeResponse'
        default:
          description: An unexpected error response
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      tags:
        - Query
  /mint/integration_addresses/{network_name}:
    get:
      summary: Inflation returns integration address.
      operationId: IntegrationAddress
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/mint.QueryIntegrationAddressResponse'
        default:
          description: An unexpected error response
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      parameters:
        - name: network_name
          in: path
          required: true
          type: string
      tags:
        - Query
  /mint/parameters:
    get:
      summary: Inflation returns current inflation.
      operationId: Inflation
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/mint.QueryInflationResponse'
        default:
          description: An unexpected error response
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      tags:
        - Query
  /mint/params:
    get:
      summary: Params returns the total set of minting parameters.
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/mint.QueryParamsResponse'
        default:
          description: An unexpected error response
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      tags:
        - Query
  /mint/treasury_pool:
    get:
      summary: Inflation returns current treasury pool.
      operationId: TreasuryPool
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/mint.QueryTreasuryPoolResponse'
        default:
          description: An unexpected error response
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      tags:
        - Query
definitions:
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
        description: >-
          A URL/resource name that uniquely identifies the type of the
          serialized

          protocol buffer message. This string must contain at least

          one "/" character. The last segment of the URL's path must represent

          the fully qualified name of the type (as in

          `path/google.protobuf.Duration`). The name should be in a canonical
          form

          (e.g., leading "." is not accepted).


          In practice, teams usually precompile into the binary all types that
          they

          expect it to use in the context of Any. However, for URLs which use
          the

          scheme `http`, `https`, or no scheme, one can optionally set up a type

          server that maps type URLs to message definitions as follows:


          * If no scheme is provided, `https` is assumed.

          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official

          protobuf release, and it is not used for type URLs beginning with

          type.googleapis.com.


          Schemes other than `http`, `https` (or the empty scheme) might be

          used with implementation specific semantics.
      value:
        type: string
        format: byte
        description: >-
          Must be a valid serialized protocol buffer of the above specified
          type.
    description: >-
      `Any` contains an arbitrary serialized protocol buffer message along with
      a

      URL that describes the type of the serialized message.


      Protobuf library provides support to pack/unpack Any values in the form

      of utility functions or additional generated methods of the Any type.


      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := ptypes.MarshalAny(foo)
           ...
           foo := &pb.Foo{}
           if err := ptypes.UnmarshalAny(any, foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use

      'type.googleapis.com/full.type.name' as the type URL and the unpack

      methods only use the fully qualified type name after the last '/'

      in the type URL, for example "foo.bar.com/x/y.z" will yield type

      name "y.z".



      JSON

      ====

      The JSON representation of an `Any` value uses the regular

      representation of the deserialized, embedded message, with an

      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON

      representation, that representation will be embedded adding a field

      `value` which holds the custom JSON in addition to the `@type`

      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/google.protobuf.Any'
  mint.Params:
    type: object
    properties:
      mint_denom:
        type: string
        title: type of coin to mint
      inflation_rate_change:
        type: string
        title: maximum annual change in inflation rate
      inflation_max:
        type: string
        title: maximum inflation rate
      inflation_min:
        type: string
        title: minimum inflation rate
      goal_bonded:
        type: string
        title: goal of percent bonded atoms
      blocks_per_year:
        type: string
        format: uint64
        title: expected blocks per year
      max_withdrawal_per_time:
        type: array
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        title: max amount to withdraw per time
      integration_addresses:
        type: object
        additionalProperties:
          type: string
        title: map with smart contracts addresses
      mint_air:
        type: boolean
        format: boolean
        title: flag if minting from air
      eligible_accounts_pool:
        type: array
        items:
          type: string
        title: eligible to withdraw accounts
      max_allowed_mint_volume:
        type: array
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        title: max allowed mint volume
      allowed_mint_denoms:
        type: array
        items:
          type: string
        title: allowed mint denoms
      allowed_minter:
        type: array
        items:
          type: string
        title: allowed minter
    description: Params holds parameters for the mint module.
  mint.QueryAnnualProvisionsResponse:
    type: object
    properties:
      annual_provisions:
        type: string
    description: |-
      QueryAnnualProvisionsResponse is response type for the
      Query/QueryAnnualProvisions RPC method.
  mint.QueryCurrentMintVolumeResponse:
    type: object
    properties:
      current_mint_volume:
        type: array
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
    description: >-
      QueryCurrentMintVolumeResponse is response type for the
      Query/QueryCurrentMintVolume

      RPC method.
  mint.QueryInflationResponse:
    type: object
    properties:
      inflation:
        type: string
    description: |-
      QueryInflationResponse is response type for the Query/QueryInflation RPC
      method.
  mint.QueryIntegrationAddressResponse:
    type: object
    properties:
      integration_address:
        type: string
    description: |-
      QueryIntegrationAddressResponse is response type for the
      Query/QueryEthIntegrationAddress RPC method.
  mint.QueryParamsResponse:
    type: object
    properties:
      params:
        $ref: '#/definitions/mint.Params'
    description: |-
      QueryParamsResponse is response type for the Query/QueryParams RPC
      method.
  mint.QueryTreasuryPoolResponse:
    type: object
    properties:
      treasury_pool:
        type: array
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
    description: |-
      QueryTreasuryPoolResponse is response type for the Query/QueryTreasuryPool
      RPC method.
